<html><head>    <meta content="text/html; charset=windows-1252" http-equiv="content-type">    <meta name="GENERATOR" content="Microsoft FrontPage 6.0">    <meta name="ProgId" content="FrontPage.Editor.Document">    <title>Coverability Graph</title>    <link rel="stylesheet" type="text/css" href="../woped.css">    <script id="injectedScriptByC4Br" src="../jquery-1.10.2.js"></script>    <script id="injectedGeneralScriptByC4Br" src="../wopedGeneral.js"></script></head><body><h2>Coverability Graph</h2><p>    The reachability problem of Petri nets is the decision, if a specific marking <i>m'</i> can be reached from a given initial marking    <i>m</i><sub>0</sub>. One way to solve this problem is to build a tree/graph which contains all reachable markings. Using this graph, a    couple of properties of the model can be derived. Unfortunately, this graph can only be calculated, if the model has a finite set of    reachable states. Such models are called <i>bounded</i> nets. As a result, if a petri net contains at least one <i>unbounded</i> place,    its reachability graph can not be calculated.</p><p>    For <i>unbounded</i> Petri nets For there exists a technique to express the infinite set of states by an abstraction as a finite set.    This technique is called the coverability tree/graph and was first mentioned by Karp and Miller in 1969. The basic idea of this concept    is to extend the marking notation with an special character for unbound places, usually the small greek letter omega &omega;. The    coverability graph is build in the same way as the reachability graph. If a new node is strictly larger than a existing node of the    tree, the marking for this place is replaced by this special character. The algorithm stops if the new node is already contained in the    the tree/graph. For bounded nets the coverability graph is equal to the reachability graph.</p><h3>Start Coverability Graph</h3><p>    WoPeD can generate the Coverability graph for bounded and unbounded nets with an algorithm based on the breath-depth-first search.    The coverability graph of the active Petri net can be displayed by clicking the corresponding button in the analysis tab.    The button is only activated if an editor window is opened and focused. WoPeD creates only one additional window for all coverability    graphs. All editors share this single coverability graph window. In order to do that, the coverability graph window will    automatically be filled with the coverability graph of the focused editor window. The initial marking of a coverability graph is always    in a grey-scaled but you can choose a colored mode in the settings.</p><h3>Coverability Graph Window</h3><p style="text-align: center"><img src="../images/rg_window_2.png" border="0"></p><h4>1 Title</h4>The name of the current shown editor is displayed here.<h4>2 Graph Drawing Place</h4><p>    The main area of the window consists of a graph drawing area where the graph    is displayed. If the resulting graph is bigger than the drawing area, it is    surrounded by scroll bars. (Behaviour is analog to a normal editor window.)</p><p>    The arcs in the graph can be adjusted using the mouse. A right click adds an movable routing point to an arc which can be dragged by    holding the left mouse button to the desired position. A right click on a routing point removes the point from the graph. Arcs with the    same origin and destination are combined to increase readability. The label of the combined arc is a concatenation of the underlying    transition identifiers.</p><h4>3 Menu Ribbon</h4><p>    <strong>Close - Button</strong><br>    The close button removes all modifications of the graph and hides the coverability graph window.</p><p>    <strong>Refresh - Button</strong><br>    The refresh button can only be activated when the underlying petri net has    changed. In order to not to accidentally destroy a manual layout the refresh    has always to be done manually by the user.</p><p>    <strong>Unselect - Button </strong><br>    With this button you can remove all highlighting form the graph. This can also be    done by double-click in the background of the coverability graph.</p></p><p>    <strong>Settings - Button</strong><br>    By clicking the <a href="reachability_graph_settings.htm" class="button">settings</a>    button a dialog opens where the visual appearance of the graph can be modified.</p><p>    <strong>Export as - Button</strong><br>    By clicking the export as button it is possible to export the current graph as an image in different file-formats.</p><p>    <strong>Layout chooser </strong><br>    With the layout chooser you can select one of three different layouts.</p><p>    <strong>Zoom - Buttons</strong><br>    You can adjust the zoom-level by clicking the buttons stepwise within the range of 25% and 200%.    Some standard zoom-levels can be selected directly with the drop-down button. Additionally, zooming can be done with the mouse-wheel.</p><p>    <strong>Assistant Section</strong><br>    With the buttons in the assistant section a <a href="coverability_graph_assistant.htm" class="button">wizard</a> can be    started/closed/reset that guides the user through the generation of the    <i>minimal coverability graph</i>.</p><h4>Status bar</h4><p>    The <a href="reachability_graph_statusbar.htm" class="button">statusbar</a> shows    information that belongs to the current coverability graph.</p><h2>Extras</h2><p>    <strong>Highlighting</strong><br>    In large coverability graphs it could be difficult to recognize the incoming/outgoing arcs from an marking. For this reason, you can    highlight the associated edges (and their labels) by clicking on the node. Incoming edges are displayed in red and outgoing edges in    green. The highlighting can be removed with the <i>Unselect</i> Button in the menu bar or by clicking on an empty space in the graph.</p><div class="CenterImg"><img src="../images/cg_highlighted.png" width="230"/></div><p>    <strong>Model Marking Synchronisation</strong><br>    If the editor and the coverability graph are displayed side by side and a marking is highlighted in the coverability graph, then the    tokens are set accordingly and the enabled transitions are also highlighted in the editor.</p><div class="CenterImg"><img src="../images/cg_editor_highlighted.png" width="470"/></div><p>    <strong>Token Game Marking Synchronisation</strong><br>    The coverability graph can not be calculated during the token game simulation. But if the graph has been created before the start of    the token game simulation, and the windows are displayed side by side, then, the nodes covering the current marking of the simulation    are highlighted in green.</p><div class="CenterImg"><img src="../images/cg_tokengame.png" width="700"/></div><div class="CenterImg"><img src="../images/cg_tokengame_highlighted.png" width="230" style="margin-top: 2em;"/></div><p></p><style>    div.CenterImg{        display: block;        margin: 0 auto;        text-align: center;    }</style></body></html>